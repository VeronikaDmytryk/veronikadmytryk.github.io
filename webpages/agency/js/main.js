function valEl(e){e.validate({rules:{name:{required:!0},email:{required:!0,email:!0},messages:{required:!0}},messages:{name:{required:"This field is required"},email:{required:"This field is required",email:"Please enter your email address"},messages:{required:"Please, leave your message here."}},submitHandler:function(e){$(".loader").fadeIn();var t=$(e),o=$(e).attr("id");switch(o){case"contactResult":case"contactResult_modal":$.ajax({type:"POST",url:t.attr("action"),data:t.serialize()}).always(function(e){setTimeout(function(){$(".loader").fadeOut()},800),setTimeout(function(){$(".overlay").fadeIn(),t.trigger("reset")},1100),$(".overlay").on("click",function(e){$(".overlay").fadeOut(),$("#myModal").fadeOut(),$(".modal-backdrop").hide(),$("body").css("padding-right",0)})});break;case"subscribeResult":$.ajax({type:"POST",url:t.attr("action"),data:t.serialize()}).always(function(e){setTimeout(function(){$(".loader").fadeOut()},800),setTimeout(function(){$(".overlay_subscribe").fadeIn(),t.trigger("reset")},1100),$(".overlay_subscribe").on("click",function(e){$(".overlay_subscribe").fadeOut(),$("#myModal").fadeOut(),$(".modal-backdrop").hide(),$("body").css("padding-right",0)})})}return!1}})}$(document).ready(function(){function e(){var e=window.location.hash.replace(/^#/g,""),t=e?"."+e:a;return t}function t(e){var t=e.activeFilter.selector,o="#"+t.replace(/^./g,"");t===a&&window.location.hash?history.pushState(null,document.title,window.location.pathname):o!==window.location.hash&&t!==a&&history.pushState(null,document.title,window.location.pathname+o)}function o(){s=$(".header").offset().top,r=$(".header").outerHeight(!0),$(".menuPos").html(s)}$("a").click(function(){var e=$(this).attr("href"),t=$(e).offset().top;return $(window).width()<=768?$("html,body").animate({scrollTop:t},1100):$("html,body").animate({scrollTop:t-90},1100),!1}),$(window).scroll(function(){var e=$("#home").offset().top-95,t=$("#portfolio").offset().top-95,o=$("#about").offset().top-95,a=$("#contact").offset().top-95,i=$(window).scrollTop();i>=e&&i<t?($(".menu__item").removeClass("active"),$(".menu__item.home").addClass("active")):i>=t&&i<o?($(".menu__item").removeClass("active"),$(".menu__item.portfolio").addClass("active")):i>=o&&i<a?($(".menu__item").removeClass("active"),$(".menu__item.about").addClass("active")):($(".menu__item").removeClass("active"),$(".menu__item.contact").addClass("active"))}),$(".menu__icon").click(function(){$(".menu-dropdown").show(),$(".menu-dropdown").toggleClass("slideInDown slideOutUp")}),$(".menu-dropdown__item a").click(function(){$(".menu-dropdown").toggleClass("slideInDown slideOutUp")}),$(".slider-for").slick({slidesToShow:1,slidesToScroll:1,arrows:!1,fade:!0,asNavFor:".slider-nav",swipe:!1}),$(".slider-nav").slick({slidesToShow:4,slidesToScroll:1,asNavFor:".slider-for",dots:!1,centerMode:!1,focusOnSelect:!0});var a=".mix",i=mixitup(".targets",{selectors:{target:a},load:{filter:e()},callbacks:{onMixEnd:t}});window.onhashchange=function(){var t=e();t!==i.getState().activeFilter.selector&&i.filter(t)},$("[data-submit]").on("click",function(){$(this).parent("form").submit()}),$.validator.addMethod("regex",function(e,t,o){var a=new RegExp(o);return this.optional(t)||a.test(e)},"Please check your input."),$(".js-form").each(function(){valEl($(this))});var s,n,r;o(),$(window).resize(o),$('<div class="clone-header"></div>').insertBefore(".header").css("height",r).hide(),$(window).scroll(function(){n=$(window).scrollTop(),winWidth=$(window).width(),winWidth>=768&&n>=s?($(".header").addClass("fixed shadow"),$(".clone-header").show()):($(".header").removeClass("fixed shadow"),$(".clone-header").hide())}),$(".fa-close").click(function(){$("#myModal").hide(),$(".modal-backdrop").hide(),$("body").css("padding-right",0)})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
